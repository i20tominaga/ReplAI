{"version":3,"sources":["../src/index.ts","../src/constants.ts","../src/createHeadingPlugin.ts"],"sourcesContent":["/** @file Automatically generated by barrelsby. */\n\nexport * from './constants';\nexport * from './createHeadingPlugin';\nexport * from './types';\n","export const ELEMENT_H1 = 'h1';\n\nexport const ELEMENT_H2 = 'h2';\n\nexport const ELEMENT_H3 = 'h3';\n\nexport const ELEMENT_H4 = 'h4';\n\nexport const ELEMENT_H5 = 'h5';\n\nexport const ELEMENT_H6 = 'h6';\n\nexport const KEYS_HEADING = [\n  ELEMENT_H1,\n  ELEMENT_H2,\n  ELEMENT_H3,\n  ELEMENT_H4,\n  ELEMENT_H5,\n  ELEMENT_H6,\n];\n","import {\n  onKeyDownToggleElement,\n  type PlatePlugin,\n  createPluginFactory,\n} from '@udecode/plate-common/server';\n\nimport type { HeadingPlugin, HeadingsPlugin } from './types';\n\nimport { KEYS_HEADING } from './constants';\n\nexport const KEY_HEADING = 'heading';\n\n/** Enables support for headings with configurable levels (from 1 to 6). */\nexport const createHeadingPlugin = createPluginFactory<HeadingsPlugin>({\n  key: KEY_HEADING,\n  options: {\n    levels: [1, 2, 3, 4, 5, 6],\n  },\n  then: (editor, { options: { levels } = {} }) => {\n    const plugins: PlatePlugin<HeadingPlugin>[] = [];\n\n    const headingLevels = Array.isArray(levels)\n      ? levels\n      : Array.from({ length: levels || 6 }, (_, i) => i + 1);\n\n    headingLevels.forEach((level) => {\n      const key = KEYS_HEADING[level - 1];\n\n      const plugin: PlatePlugin<HeadingPlugin> = {\n        deserializeHtml: {\n          rules: [\n            {\n              validNodeName: `H${level}`,\n            },\n          ],\n        },\n        handlers: {\n          onKeyDown: onKeyDownToggleElement,\n        },\n        isElement: true,\n        key,\n        options: {},\n      };\n\n      if (level < 4) {\n        plugin.options!.hotkey = [`mod+opt+${level}`, `mod+shift+${level}`];\n      }\n\n      plugins.push(plugin);\n    });\n\n    return {\n      plugins,\n    };\n  },\n});\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAO,IAAM,aAAa;AAEnB,IAAM,aAAa;AAEnB,IAAM,aAAa;AAEnB,IAAM,aAAa;AAEnB,IAAM,aAAa;AAEnB,IAAM,aAAa;AAEnB,IAAM,eAAe;AAAA,EAC1B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;;;ACnBA,oBAIO;AAMA,IAAM,cAAc;AAGpB,IAAM,0BAAsB,mCAAoC;AAAA,EACrE,KAAK;AAAA,EACL,SAAS;AAAA,IACP,QAAQ,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,EAC3B;AAAA,EACA,MAAM,CAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,IAAI,CAAC,EAAE,MAAM;AAC9C,UAAM,UAAwC,CAAC;AAE/C,UAAM,gBAAgB,MAAM,QAAQ,MAAM,IACtC,SACA,MAAM,KAAK,EAAE,QAAQ,UAAU,EAAE,GAAG,CAAC,GAAG,MAAM,IAAI,CAAC;AAEvD,kBAAc,QAAQ,CAAC,UAAU;AAC/B,YAAM,MAAM,aAAa,QAAQ,CAAC;AAElC,YAAM,SAAqC;AAAA,QACzC,iBAAiB;AAAA,UACf,OAAO;AAAA,YACL;AAAA,cACE,eAAe,IAAI,KAAK;AAAA,YAC1B;AAAA,UACF;AAAA,QACF;AAAA,QACA,UAAU;AAAA,UACR,WAAW;AAAA,QACb;AAAA,QACA,WAAW;AAAA,QACX;AAAA,QACA,SAAS,CAAC;AAAA,MACZ;AAEA,UAAI,QAAQ,GAAG;AACb,eAAO,QAAS,SAAS,CAAC,WAAW,KAAK,IAAI,aAAa,KAAK,EAAE;AAAA,MACpE;AAEA,cAAQ,KAAK,MAAM;AAAA,IACrB,CAAC;AAED,WAAO;AAAA,MACL;AAAA,IACF;AAAA,EACF;AACF,CAAC;","names":[]}