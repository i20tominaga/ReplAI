// src/constants.ts
var ELEMENT_H1 = "h1";
var ELEMENT_H2 = "h2";
var ELEMENT_H3 = "h3";
var ELEMENT_H4 = "h4";
var ELEMENT_H5 = "h5";
var ELEMENT_H6 = "h6";
var KEYS_HEADING = [
  ELEMENT_H1,
  ELEMENT_H2,
  ELEMENT_H3,
  ELEMENT_H4,
  ELEMENT_H5,
  ELEMENT_H6
];

// src/createHeadingPlugin.ts
import {
  onKeyDownToggleElement,
  createPluginFactory
} from "@udecode/plate-common/server";
var KEY_HEADING = "heading";
var createHeadingPlugin = createPluginFactory({
  key: KEY_HEADING,
  options: {
    levels: [1, 2, 3, 4, 5, 6]
  },
  then: (editor, { options: { levels } = {} }) => {
    const plugins = [];
    const headingLevels = Array.isArray(levels) ? levels : Array.from({ length: levels || 6 }, (_, i) => i + 1);
    headingLevels.forEach((level) => {
      const key = KEYS_HEADING[level - 1];
      const plugin = {
        deserializeHtml: {
          rules: [
            {
              validNodeName: `H${level}`
            }
          ]
        },
        handlers: {
          onKeyDown: onKeyDownToggleElement
        },
        isElement: true,
        key,
        options: {}
      };
      if (level < 4) {
        plugin.options.hotkey = [`mod+opt+${level}`, `mod+shift+${level}`];
      }
      plugins.push(plugin);
    });
    return {
      plugins
    };
  }
});
export {
  ELEMENT_H1,
  ELEMENT_H2,
  ELEMENT_H3,
  ELEMENT_H4,
  ELEMENT_H5,
  ELEMENT_H6,
  KEYS_HEADING,
  KEY_HEADING,
  createHeadingPlugin
};
//# sourceMappingURL=index.mjs.map