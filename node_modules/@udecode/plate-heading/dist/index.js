"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  ELEMENT_H1: () => ELEMENT_H1,
  ELEMENT_H2: () => ELEMENT_H2,
  ELEMENT_H3: () => ELEMENT_H3,
  ELEMENT_H4: () => ELEMENT_H4,
  ELEMENT_H5: () => ELEMENT_H5,
  ELEMENT_H6: () => ELEMENT_H6,
  KEYS_HEADING: () => KEYS_HEADING,
  KEY_HEADING: () => KEY_HEADING,
  createHeadingPlugin: () => createHeadingPlugin
});
module.exports = __toCommonJS(src_exports);

// src/constants.ts
var ELEMENT_H1 = "h1";
var ELEMENT_H2 = "h2";
var ELEMENT_H3 = "h3";
var ELEMENT_H4 = "h4";
var ELEMENT_H5 = "h5";
var ELEMENT_H6 = "h6";
var KEYS_HEADING = [
  ELEMENT_H1,
  ELEMENT_H2,
  ELEMENT_H3,
  ELEMENT_H4,
  ELEMENT_H5,
  ELEMENT_H6
];

// src/createHeadingPlugin.ts
var import_server = require("@udecode/plate-common/server");
var KEY_HEADING = "heading";
var createHeadingPlugin = (0, import_server.createPluginFactory)({
  key: KEY_HEADING,
  options: {
    levels: [1, 2, 3, 4, 5, 6]
  },
  then: (editor, { options: { levels } = {} }) => {
    const plugins = [];
    const headingLevels = Array.isArray(levels) ? levels : Array.from({ length: levels || 6 }, (_, i) => i + 1);
    headingLevels.forEach((level) => {
      const key = KEYS_HEADING[level - 1];
      const plugin = {
        deserializeHtml: {
          rules: [
            {
              validNodeName: `H${level}`
            }
          ]
        },
        handlers: {
          onKeyDown: import_server.onKeyDownToggleElement
        },
        isElement: true,
        key,
        options: {}
      };
      if (level < 4) {
        plugin.options.hotkey = [`mod+opt+${level}`, `mod+shift+${level}`];
      }
      plugins.push(plugin);
    });
    return {
      plugins
    };
  }
});
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  ELEMENT_H1,
  ELEMENT_H2,
  ELEMENT_H3,
  ELEMENT_H4,
  ELEMENT_H5,
  ELEMENT_H6,
  KEYS_HEADING,
  KEY_HEADING,
  createHeadingPlugin
});
//# sourceMappingURL=index.js.map