{"version":3,"sources":["../src/createExcalidrawPlugin.ts","../src/hooks/useExcalidrawElement.ts","../src/transforms/insertExcalidraw.ts"],"sourcesContent":["import { createPluginFactory } from '@udecode/plate-common/server';\n\nexport const ELEMENT_EXCALIDRAW = 'excalidraw';\n\n/** Enables support for Excalidraw drawing tool within a Slate document */\nexport const createExcalidrawPlugin = createPluginFactory({\n  isElement: true,\n  isVoid: true,\n  key: ELEMENT_EXCALIDRAW,\n});\n","import React from 'react';\n\nimport type {\n  ExcalidrawImperativeAPI,\n  LibraryItems,\n} from '@excalidraw/excalidraw/types/types';\n\nimport type { TExcalidrawElement, TExcalidrawProps } from '..';\n\nexport const useExcalidrawElement = ({\n  element,\n  libraryItems = [],\n  scrollToContent = true,\n}: {\n  element: TExcalidrawElement;\n  libraryItems?: LibraryItems;\n  scrollToContent?: boolean;\n}) => {\n  const [Excalidraw, setExcalidraw] = React.useState<any>(null);\n  React.useEffect(() => {\n    void import('@excalidraw/excalidraw').then((comp) =>\n      setExcalidraw(comp.Excalidraw)\n    );\n  });\n\n  const _excalidrawRef = React.useRef<ExcalidrawImperativeAPI>(null);\n\n  // const editor = useEditorRef();\n\n  const excalidrawProps: TExcalidrawProps = {\n    autoFocus: false,\n    excalidrawRef: _excalidrawRef,\n    initialData: {\n      appState: element.data?.state,\n      elements: element.data?.elements,\n      libraryItems,\n      scrollToContent,\n    },\n    // onChange: (elements: readonly ExcalidrawElementType[], state: AppState) => {\n    // const path = findNodePath(editor, element);\n\n    // FIXME: setNodes triggers render loop as onChange is triggered on rerender\n    // in the meantime, the prop can be used to save the data outside slate\n    // setNodes(editor, { data: { elements, state } }, { at: path });\n    // },\n  };\n\n  return {\n    Excalidraw,\n    excalidrawProps,\n  };\n};\n","import {\n  type InsertNodesOptions,\n  type PlateEditor,\n  type PlatePluginKey,\n  type TNodeProps,\n  type Value,\n  getParentNode,\n  insertNodes,\n} from '@udecode/plate-common/server';\n\nimport type { TExcalidrawElement } from '../types';\n\nimport { ELEMENT_EXCALIDRAW } from '../createExcalidrawPlugin';\n\nexport const insertExcalidraw = <V extends Value>(\n  editor: PlateEditor<V>,\n  {\n    key = ELEMENT_EXCALIDRAW,\n    ...props\n  }: PlatePluginKey & TNodeProps<TExcalidrawElement> = {},\n  options: InsertNodesOptions<V> = {}\n): void => {\n  if (!editor.selection) return;\n\n  const selectionParentEntry = getParentNode(editor, editor.selection);\n\n  if (!selectionParentEntry) return;\n\n  const [, path] = selectionParentEntry;\n\n  insertNodes<TExcalidrawElement>(\n    editor,\n    {\n      children: [{ text: '' }],\n      type: key,\n      ...props,\n    },\n    { at: path, nextBlock: true, ...(options as any) }\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,2BAA2B;AAE7B,IAAM,qBAAqB;AAG3B,IAAM,yBAAyB,oBAAoB;AAAA,EACxD,WAAW;AAAA,EACX,QAAQ;AAAA,EACR,KAAK;AACP,CAAC;;;ACTD,OAAO,WAAW;AASX,IAAM,uBAAuB,CAAC;AAAA,EACnC;AAAA,EACA,eAAe,CAAC;AAAA,EAChB,kBAAkB;AACpB,MAIM;AAjBN;AAkBE,QAAM,CAAC,YAAY,aAAa,IAAI,MAAM,SAAc,IAAI;AAC5D,QAAM,UAAU,MAAM;AACpB,SAAK,OAAO,wBAAwB,EAAE;AAAA,MAAK,CAAC,SAC1C,cAAc,KAAK,UAAU;AAAA,IAC/B;AAAA,EACF,CAAC;AAED,QAAM,iBAAiB,MAAM,OAAgC,IAAI;AAIjE,QAAM,kBAAoC;AAAA,IACxC,WAAW;AAAA,IACX,eAAe;AAAA,IACf,aAAa;AAAA,MACX,WAAU,aAAQ,SAAR,mBAAc;AAAA,MACxB,WAAU,aAAQ,SAAR,mBAAc;AAAA,MACxB;AAAA,MACA;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQF;AAEA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;;;ACnDA;AAAA,EAME;AAAA,EACA;AAAA,OACK;AAMA,IAAM,mBAAmB,CAC9B,QACA,KAGqD,CAAC,GACtD,UAAiC,CAAC,MACzB;AALT,eACE;AAAA,UAAM;AAAA,EAjBV,IAgBE,IAEK,kBAFL,IAEK;AAAA,IADH;AAAA;AAKF,MAAI,CAAC,OAAO;AAAW;AAEvB,QAAM,uBAAuB,cAAc,QAAQ,OAAO,SAAS;AAEnE,MAAI,CAAC;AAAsB;AAE3B,QAAM,CAAC,EAAE,IAAI,IAAI;AAEjB;AAAA,IACE;AAAA,IACA;AAAA,MACE,UAAU,CAAC,EAAE,MAAM,GAAG,CAAC;AAAA,MACvB,MAAM;AAAA,OACH;AAAA,IAEL,iBAAE,IAAI,MAAM,WAAW,QAAU;AAAA,EACnC;AACF;","names":[]}